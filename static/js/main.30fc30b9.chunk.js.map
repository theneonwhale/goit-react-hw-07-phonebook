{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/TotalContacts/TotalContacts.module.css","components/Container/Container.module.css","components/Loader/Loader.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/Section/Section.js","services/api-contacts.js","redux/contacts/operations.js","redux/contacts/selectors.js","redux/contacts/actions.js","components/Loader/Loader.js","components/ContactForm/ContactForm.js","components/TotalContacts/TotalContacts.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Notification/Notification.js","App.js","redux/contacts/reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","axios","defaults","baseURL","addContact","contact","post","deleteContact","contactId","delete","operations","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","API","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getError","error","getVisibleContacts","createSelector","name","toLowerCase","includes","changeFilter","createAction","value","payload","Loader","type","color","height","width","ContactForm","useState","setName","number","setNumber","adding","setAdding","useSelector","selectors","dispatch","useDispatch","handleChange","e","currentTarget","reset","setTimeout","onSubmit","preventDefault","find","toast","dark","autoClose","form","item","onChange","placeholder","input","button","TotalContacts","totalContacts","total","length","ContactListItem","id","deleteId","setDeleteId","deleting","onClick","ContactList","map","Filter","actions","target","Notification","message","notification","App","visibleContacts","useEffect","createReducer","fulfilled","pending","rejected","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30fc30b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__MRMiN\",\"item\":\"ContactForm_item__19TAB\",\"title\":\"ContactForm_title__2S1HZ\",\"input\":\"ContactForm_input__2H4pB\",\"button\":\"ContactForm_button__4j8fc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__lsiEb\",\"item\":\"ContactList_item__289x4\",\"contact\":\"ContactList_contact__oYHiV\",\"button\":\"ContactList_button__3W-Ng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2-F7s\",\"title\":\"Filter_title__9hCAE\",\"input\":\"Filter_input__2dm-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2rtNI\",\"title\":\"Section_title__3rwSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"totalContacts\":\"TotalContacts_totalContacts__1C_p3\",\"total\":\"TotalContacts_total__17Ja3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Ykwy1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2HBaV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2eUSj\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title = 'Section', children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => axios.get('/contacts');\n\nexport const addContact = contact => axios.post('/contacts', contact);\n\nexport const deleteContact = contactId =>\n  axios.delete(`/contacts/${contactId}`);\n","import * as API from '../../services/api-contacts';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nconst fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await API.fetchContacts();\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await API.addContact(contact);\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactId, { rejectWithValue }) => {\n    try {\n      await API.deleteContact(contactId);\n\n      return contactId;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nconst operations = { fetchContacts, addContact, deleteContact };\n\nexport default operations;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/filter', value => ({\n  payload: value,\n}));\n","import LoaderSpinner from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nexport default function Loader() {\n  return (\n    <div className={s.Loader}>\n      <LoaderSpinner type=\"TailSpin\" color=\"#00BFFF\" height={20} width={20} />\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { operations, selectors } from 'redux/contacts';\nimport Loader from '../Loader/Loader';\nimport s from './ContactForm.module.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [adding, setAdding] = useState(false);\n\n  const contacts = useSelector(selectors.getContacts);\n\n  const loading = useSelector(selectors.getLoading);\n\n  const contact = { name, number };\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    setAdding(true);\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contact.name === '') {\n      toast.dark(`🦝 Enter name...`, { autoClose: 3000 });\n      return;\n    }\n\n    if (contact.number === '') {\n      toast.dark(`🦝 Enter number...`, { autoClose: 3000 });\n      return;\n    }\n\n    contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\n    )\n      ? toast.dark(`🦝 ${name} is already in contacts.`, { autoClose: 3000 })\n      : dispatch(operations.addContact(contact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setTimeout(() => {\n      setName('');\n      setNumber('');\n    }, 0);\n\n    setTimeout(() => {\n      setAdding(false);\n    }, 1000);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label className={s.item}>\n          <p className={s.title}>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            placeholder=\"Enter name here...\"\n            className={s.input}\n          />\n        </label>\n        <label className={s.item}>\n          <p className={s.title}>Number</p>\n          <input\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            placeholder=\"Enter number here...\"\n            className={s.input}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          {loading && adding ? <Loader /> : 'Add contact'}\n        </button>\n      </form>\n      <ToastContainer />\n    </>\n  );\n}\n","import s from './TotalContacts.module.css';\nimport { selectors } from 'redux/contacts';\nimport { useSelector } from 'react-redux';\n\nexport default function TotalContacts() {\n  const contacts = useSelector(selectors.getContacts);\n\n  return (\n    <div className={s.totalContacts}>\n      Contacts in phonebook: <span className={s.total}>{contacts.length}</span>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Loader from '../Loader/Loader';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectors, operations } from 'redux/contacts';\n\nexport default function ContactListItem({ name, number, id }) {\n  const [deleteId, setDeleteId] = useState(0);\n  const loading = useSelector(selectors.getLoading);\n  const deleting = deleteId === id;\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    setDeleteId(id);\n    dispatch(operations.deleteContact(id));\n  };\n\n  return (\n    <li className={s.item}>\n      <p className={s.contact}>\n        {name}: {number}\n      </p>\n      <button onClick={handleDelete} className={s.button}>\n        {loading && deleting ? <Loader /> : 'Remove'}\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport ContactItem from './ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectors } from 'redux/contacts';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectors.getVisibleContacts);\n\n  return (\n    <ul className={s.contacts}>\n      {contacts.map(({ name = 'anonymous', number = 'unknown', id = null }) => (\n        <ContactItem key={id} name={name} number={number} id={id} />\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actions } from 'redux/contacts';\nimport { selectors } from 'redux/contacts';\n\nexport default function Filter() {\n  const value = useSelector(selectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.filter}>\n      <p className={s.title}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(actions.changeFilter(e.target.value))}\n        placeholder=\"Enter name here...\"\n        className={s.input}\n      />\n    </label>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message = 'Nothing to show.' }) {\n  return <p className={s.notification}> {message} </p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport TotalContacts from './components/TotalContacts/TotalContacts';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport Notification from './components/Notification/Notification';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { operations, selectors } from 'redux/contacts';\n\nexport default function App() {\n  const contacts = useSelector(selectors.getContacts);\n  const visibleContacts = useSelector(selectors.getVisibleContacts);\n  const error = useSelector(selectors.getError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Section title=\"Phone book\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length > 0 && <TotalContacts />}\n        {contacts.length > 0 && <Filter />}\n        {visibleContacts.length > 0 ? (\n          <ContactList />\n        ) : (\n          <Notification message={'Nothing to show.'} />\n        )}\n        {error && <Notification message={error.message} />}\n      </Section>\n    </Container>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { operations, actions } from 'redux/contacts';\n\nconst items = createReducer([], {\n  [operations.fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [operations.addContact.fulfilled]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [operations.deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [operations.fetchContacts.pending]: () => true,\n  [operations.fetchContacts.fulfilled]: () => false,\n  [operations.fetchContacts.rejected]: () => false,\n  [operations.addContact.pending]: () => true,\n  [operations.addContact.fulfilled]: () => false,\n  [operations.addContact.rejected]: () => false,\n  [operations.deleteContact.pending]: () => true,\n  [operations.deleteContact.fulfilled]: () => false,\n  [operations.deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [operations.fetchContacts.rejected]: (_, { payload }) => payload,\n  [operations.fetchContacts.pending]: () => null,\n  [operations.addContact.rejected]: (_, { payload }) => payload,\n  [operations.addContact.pending]: () => null,\n  [operations.deleteContact.rejected]: (_, { payload }) => payload,\n  [operations.deleteContact.pending]: () => null,\n});\n\nexport default combineReducers({ items, filter, loading, error });\n","import contactsReducer from './contacts/reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\n\nexport const store = configureStore({\n  reducer: { contacts: contactsReducer },\n  middleware: [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n    logger,\n  ],\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}